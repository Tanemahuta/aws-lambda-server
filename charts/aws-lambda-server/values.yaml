---
# Name and full name override for the release
nameOverride: ""
fullnameOverride: ""

# Deployment configuration
deployment:
  metadata:
    annotations: {}
    labels: {}
  # Image parameters
  image:
    repository: ghcr.io/tanemahuta/aws-lambda-server
    # Defaults to the appVersion
    tag: ""
    digest: ~
    pullPolicy: IfNotPresent
    pullSecrets: []
  # Amount of replicas
  replicas: 1
  # Resources configuration
  resources:
    requests:
      cpu: 100m
      memory: 16Mi
    limits:
      cpu: 400m
      memory: 64Mi
  # Rolling update configuration
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1
  # Node selectors to be used
  nodeSelector: {}
  # Toleration configuration
  tolerations: []
  # Affinity configuration
  affinity: {}
  # Additional sidecar containers
  sideCars: []
# Service account configuration
serviceAccount:
  metadata:
    annotations: {}
    # Example for assuming an IAM role
    # (see https://docs.aws.amazon.com/eks/latest/userguide/iam-roles-for-service-accounts.html)
    # eks.amazonaws.com/role-arn: "arn:aws:iam::000000000000:role/my-lambda-invoker"
    labels: {}

service:
  metadata:
    annotations: {}
    labels: {}
  ipFamilies:
    - IPv4
  type: ClusterIP
  # Set these, in case you need it. Watch out for the type of the service.
  externalTrafficPolicy: ~
  loadBalancerClass: ~
  sessionAffinity: ~

# Configuration example
config:
  # HTTP configuration
  http:
    # Optional: Set a read timeout (e.g. 2m)
    readTimeout: ~
    # Optional: Set a read timeout (e.g. 2m)
    writeTimeout: ~
    # Optional: Set a read timeout (e.g. 2m)
    readHeaderTimeout: ~
  # AWS client configuration, to be propagated to the function
  aws:
    # Retry configuration (with defaults from AWS)
    retry:
      # Max backoff timeout for a retry
      maxBackoff: 20s
      # Max attempts for a request
      maxAttempts: 3
      # Rate limiter options
      rateLimiter:
        # The cost to deduct from the token bucket per retry
        retryCost: 5
        # The cost to deduct from the token bucket per retry caused by timeout error.
        retryTimeoutCost: 10
        # The cost to payback to the token bucket for successful attempts.
        noRetryIncrement: 1
        # Amount of tokens
        tokens: 500
  # Disable validation of the lambda invocation (dry-run) on startup
  disableValidation: false
  functions:
    - arn: "arn:aws:lambda:eu-central-1:000000000000:function:my-lambda-function"
      timeout: 1m
      routes:
        - path: "/"
          methods: ["GET"]
