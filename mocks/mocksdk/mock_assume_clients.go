// Code generated by MockGen. DO NOT EDIT.
// Source: ./assume_clients.go

// Package mocksdk is a generated GoMock package.
package mocksdk

import (
	reflect "reflect"

	sdk "github.com/Tanemahuta/aws-lambda-server/pkg/aws/sdk"
	arn "github.com/aws/aws-sdk-go-v2/aws/arn"
	gomock "github.com/golang/mock/gomock"
)

// MockAssumeClients is a mock of AssumeClients interface.
type MockAssumeClients struct {
	ctrl     *gomock.Controller
	recorder *MockAssumeClientsMockRecorder
}

// MockAssumeClientsMockRecorder is the mock recorder for MockAssumeClients.
type MockAssumeClientsMockRecorder struct {
	mock *MockAssumeClients
}

// NewMockAssumeClients creates a new mock instance.
func NewMockAssumeClients(ctrl *gomock.Controller) *MockAssumeClients {
	mock := &MockAssumeClients{ctrl: ctrl}
	mock.recorder = &MockAssumeClientsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAssumeClients) EXPECT() *MockAssumeClientsMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockAssumeClients) Get(assumeRole *arn.ARN) sdk.C {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", assumeRole)
	ret0, _ := ret[0].(sdk.C)
	return ret0
}

// Get indicates an expected call of Get.
func (mr *MockAssumeClientsMockRecorder) Get(assumeRole interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockAssumeClients)(nil).Get), assumeRole)
}
