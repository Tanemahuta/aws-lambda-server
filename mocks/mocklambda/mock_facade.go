// Code generated by MockGen. DO NOT EDIT.
// Source: ./facade.go

// Package mocklambda is a generated GoMock package.
package mocklambda

import (
	context "context"
	reflect "reflect"

	lambda "github.com/Tanemahuta/aws-lambda-server/pkg/aws/lambda"
	gomock "github.com/golang/mock/gomock"
)

// MockFacade is a mock of Facade interface.
type MockFacade struct {
	ctrl     *gomock.Controller
	recorder *MockFacadeMockRecorder
}

// MockFacadeMockRecorder is the mock recorder for MockFacade.
type MockFacadeMockRecorder struct {
	mock *MockFacade
}

// NewMockFacade creates a new mock instance.
func NewMockFacade(ctrl *gomock.Controller) *MockFacade {
	mock := &MockFacade{ctrl: ctrl}
	mock.recorder = &MockFacadeMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFacade) EXPECT() *MockFacadeMockRecorder {
	return m.recorder
}

// CanInvoke mocks base method.
func (m *MockFacade) CanInvoke(ctx context.Context, ref lambda.FnRef) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CanInvoke", ctx, ref)
	ret0, _ := ret[0].(error)
	return ret0
}

// CanInvoke indicates an expected call of CanInvoke.
func (mr *MockFacadeMockRecorder) CanInvoke(ctx, ref interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CanInvoke", reflect.TypeOf((*MockFacade)(nil).CanInvoke), ctx, ref)
}

// Invoke mocks base method.
func (m *MockFacade) Invoke(ctx context.Context, ref lambda.FnRef, request *lambda.Request) (*lambda.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Invoke", ctx, ref, request)
	ret0, _ := ret[0].(*lambda.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Invoke indicates an expected call of Invoke.
func (mr *MockFacadeMockRecorder) Invoke(ctx, ref, request interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Invoke", reflect.TypeOf((*MockFacade)(nil).Invoke), ctx, ref, request)
}
